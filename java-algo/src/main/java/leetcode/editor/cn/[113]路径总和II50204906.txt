
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode(int x) { val = x; }
     * }
     */
    class Solution {
        public List<List<Integer>> pathSum(TreeNode root, int sum) {
            List<List<Integer>> result = new LinkedList<>();
            List<Integer> currentResult = new LinkedList<>();
            pathSum(root, sum, currentResult, result);
            return result;
        }

        private void pathSum(TreeNode root, int sum, List<Integer> currentResult, List<List<Integer>> result) {
            if (root == null) {
                return;
            }
            currentResult.add(root.val);
            if (root.left == null && root.right == null && sum == root.val) {
                result.add(new LinkedList<>(currentResult));
                currentResult.remove(currentResult.size() - 1);
                return;
            } else {
                pathSum(root.left, sum - root.val, currentResult, result);
                pathSum(root.right, sum - root.val, currentResult, result);
            }
            currentResult.remove(currentResult.size() - 1);
        }
    }

//runtime:3 ms
//memory:41.6 MB
