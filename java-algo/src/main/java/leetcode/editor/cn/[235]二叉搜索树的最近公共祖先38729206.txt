
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode(int x) { val = x; }
     * }
     */
    class Solution {
        /**
         * ??????
         * @param root
         * @param p
         * @param q
         * @return
         */
        public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
            return (root.val - (long)p.val) * (root.val - (long)q.val) < 1 ?
                    root : lowestCommonAncestor(p.val < root.val ? root.left : root.right, p, q);
        }

        /**
         * ??????
         * @param root
         * @param p
         * @param q
         * @return
         */
        public TreeNode lowestCommonAncestor2(TreeNode root, TreeNode p, TreeNode q) {
            while ((root.val - (long)p.val) * (root.val - (long)q.val) > 0) {
                root = p.val < root.val ? root.left : root.right;
            }
            return root;
        }
    }

//runtime:7 ms
//memory:36.1 MB
