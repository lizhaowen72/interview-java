
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode(int x) { val = x; }
     * }
     */
    class Solution {
        int max = 0;

        /**
         * For every node, length of longest path which pass it = MaxDepth of its left subtree + MaxDepth of its right subtree.
         *
         * @param root
         * @return
         */
        public int diameterOfBinaryTree(TreeNode root) {
            maxDepth(root);
            return max;
        }

        private int maxDepth(TreeNode root) {
            if (root == null) return 0;
            int left = maxDepth(root.left);
            int right = maxDepth(root.right);
            max = Math.max(max, left + right);
            return Math.max(left, right) + 1;
        }
    }


//runtime:1 ms
//memory:38.5 MB
